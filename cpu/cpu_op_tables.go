package cpu

// TODO: globals suck. lets refactor this into a struct when there's time
// TODO: this can be built programmatically (and cleaner) at init, make that
//       switch

// Operations consuming a byte/word
var otWr = map[uint8]bool{
	0x06: true, 0x0E: true, 0x10: true, 0x16: true, 0x18: true, 0x1E: true,
	0x20: true, 0x26: true, 0x28: true, 0x2E: true, 0x30: true, 0x36: true,
	0x38: true, 0x3E: true, 0xC6: true, 0xCE: true, 0xD6: true, 0xDE: true,
	0xE6: true, 0xEE: true, 0xF0: true, 0xF6: true, 0xFE: true,
}

var otWl = map[uint8]bool{
	0xE0: true,
}

// Operations consuming a double word
var otDWr = map[uint8]bool{
	0x01: true, 0x11: true, 0x21: true, 0x31: true, 0xC2: true, 0xC3: true,
	0xC4: true, 0xCA: true, 0xCC: true, 0xCD: true, 0xD2: true, 0xD4: true,
	0xDA: true, 0xDC: true, 0xFA: true,
}
var otDWl = map[uint8]bool{
	0x08: true, 0xEA: true,
}

// register based operands
var otRegAl = map[uint8]bool{
	0x0a: true, 0x1a: true, 0x2a: true, 0x3a: true, 0x3e: true, 0x78: true,
	0x79: true, 0x7a: true, 0x7b: true, 0x7c: true, 0x7d: true, 0x7e: true,
	0x7f: true, 0x80: true, 0x81: true, 0x82: true, 0x83: true, 0x84: true,
	0x85: true, 0x86: true, 0x87: true, 0x88: true, 0x89: true, 0x8a: true,
	0x8b: true, 0x8c: true, 0x8d: true, 0x8e: true, 0x8f: true, 0x98: true,
	0x99: true, 0x9a: true, 0x9b: true, 0x9c: true, 0x9d: true, 0x9e: true,
	0x9f: true, 0xc6: true, 0xce: true, 0xde: true, 0xf0: true, 0xf2: true,
	0xfa: true,
}
var otRegAr = map[uint8]bool{
	0x02: true, 0x12: true, 0x22: true, 0x32: true, 0x47: true, 0x4f: true,
	0x57: true, 0x5f: true, 0x67: true, 0x6f: true, 0x77: true, 0x7f: true,
	0x87: true, 0x8f: true, 0x9f: true, 0xe0: true, 0xe2: true, 0xea: true,
}

// LD operations. LD's make up the majority of opcodes in the GB so this
// is a beast.
var otLD = map[uint8]bool{
	0x01: true, 0x02: true, 0x06: true, 0x08: true, 0x0A: true, 0x0E: true,
	0x11: true, 0x12: true, 0x16: true, 0x1A: true, 0x1E: true, 0x21: true,
	0x22: true, 0x26: true, 0x2A: true, 0x2E: true, 0x31: true, 0x32: true,
	0x36: true, 0x3A: true, 0x3E: true, 0x40: true, 0x41: true, 0x42: true,
	0x43: true, 0x44: true, 0x45: true, 0x46: true, 0x47: true, 0x48: true,
	0x49: true, 0x4A: true, 0x4B: true, 0x4C: true, 0x4D: true, 0x4E: true,
	0x4F: true, 0x50: true, 0x51: true, 0x52: true, 0x53: true, 0x54: true,
	0x55: true, 0x56: true, 0x57: true, 0x58: true, 0x59: true, 0x5A: true,
	0x5B: true, 0x5C: true, 0x5D: true, 0x5E: true, 0x5F: true, 0x60: true,
	0x61: true, 0x62: true, 0x63: true, 0x64: true, 0x65: true, 0x66: true,
	0x67: true, 0x68: true, 0x69: true, 0x6A: true, 0x6B: true, 0x6C: true,
	0x6D: true, 0x6E: true, 0x6F: true, 0x70: true, 0x71: true, 0x72: true,
	0x73: true, 0x74: true, 0x75: true, 0x77: true, 0x78: true, 0x79: true,
	0x7A: true, 0x7B: true, 0x7C: true, 0x7D: true, 0x7E: true, 0x7F: true,
	0xE0: true, 0xE2: true, 0xEA: true, 0xF0: true, 0xF2: true, 0xF8: true,
	0xF9: true, 0xFA: true,
}

var otADD = map[uint8]bool{
	0x09: true, 0x19: true, 0x29: true, 0x39: true, 0x80: true, 0x81: true,
	0x82: true, 0x83: true, 0x84: true, 0x85: true, 0x86: true, 0x87: true,
	0xC6: true, 0xE8: true,
}
